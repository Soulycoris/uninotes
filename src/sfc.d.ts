declare module "*.vue" {
  import Vue from "vue";
  export default Vue;
}
interface charaData {
  charaBase: charaBase[];
  charaStoryStatus: charaStoryStatus[];
  unitRarity: unitRarity[];
  charaPromotion: charaPromotion[];
  charaPromotionStatus: charaPromotionStatus[];
  equipments: equipments[];
  // equipmentsPromotion :Array,
  uniqueEquipment: uniqueEquipment[];
  uniqueEquipmentEnhance: uniqueEquipmentEnhance[];
  unitSkillData: unitSkillData[];
  skillData: skillData[];
  skillAction: skillAction[];
  unitAttackPattern: unitAttackPattern[];
}

interface charaStatus {
  atk: number;
  def: number;
  magic_str: number;
  magic_def: number;
  physical_critical: number;
  magic_critical: number;
  hp: number;
  life_steal: number;
  energy_recovery_rate: number;
  energy_reduce_rate: number;
  accuracy: number;
  dodge: number;
  wave_hp_recovery: number;
  wave_energy_recovery: number;
  magic_penetrate: number;
  physical_penetrate: number;
  hp_recovery_rate: number;
}
type charaStatusKey = keyof charaStatus;
type charaBaseKey = keyof charaBase;
interface charaBase {
  unit_id: number;
  unit_name: string;
  kana?: string;
  prefab_id?: number;
  move_speed?: number;
  search_area_width: number;
  atk_type: number;
  normal_atk_cast_time?: number;
  guild_id?: number;
  comment?: string;
  start_time: string;
  age: string;
  guild?: string;
  race?: string;
  height: string;
  weight: string;
  birth_month?: string;
  birth_day?: string;
  blood_type?: string;
  favorite?: string;
  voice?: string;
  catch_copy?: string;
  self_text?: string;
  actual_name?: string;
}
type charaStoryStatusKey = keyof charaStoryStatus;
interface charaStoryStatus {
  story_id: number;
  unlock_story_name: string;
  status_type_1: number;
  status_rate_1: number;
  status_type_2: number;
  status_rate_2: number;
  status_type_3: number;
  status_rate_3: number;
  status_type_4: number;
  status_rate_4: number;
  status_type_5: number;
  status_rate_5: number;
  chara_id_1: number;
  chara_id_2: number;
  chara_id_3: number;
  chara_id_4: number;
  chara_id_5: number;
  chara_id_6: number;
  chara_id_7: number;
  chara_id_8: number;
  chara_id_9: number;
  chara_id_10: number;
}

type unitRarityKey = keyof unitRarity;
interface unitRarity {
  unit_id: number;
  rarity: number;
  hp: number;
  hp_growth: number;
  atk: number;
  atk_growth: number;
  magic_str: number;
  magic_str_growth: number;
  def: number;
  def_growth: number;
  magic_def: number;
  magic_def_growth: number;
  physical_critical: number;
  physical_critical_growth: number;
  magic_critical: number;
  magic_critical_growth: number;
  wave_hp_recovery: number;
  wave_hp_recovery_growth: number;
  wave_energy_recovery: number;
  wave_energy_recovery_growth: number;
  dodge: number;
  dodge_growth: number;
  physical_penetrate: number;
  physical_penetrate_growth: number;
  magic_penetrate: number;
  magic_penetrate_growth: number;
  life_steal: number;
  life_steal_growth: number;
  hp_recovery_rate: number;
  hp_recovery_rate_growth: number;
  energy_recovery_rate: number;
  energy_recovery_rate_growth: number;
  energy_reduce_rate: number;
  energy_reduce_rate_growth: number;
  unit_material_id: number;
  consume_num: number;
  consume_gold: number;
  accuracy: number;
  accuracy_growth: number;
}
interface charaPromotion {
  unit_id: number;
  promotion_level: number;
  equip_slot_1: number;
  equip_slot_2: number;
  equip_slot_3: number;
  equip_slot_4: number;
  equip_slot_5: number;
  equip_slot_6: number;
}
interface charaPromotionStatus {
  unit_id: number;
  promotion_level: number;
  hp: number;
  atk: number;
  magic_str: number;
  def: number;
  magic_def: number;
  physical_critical: number;
  magic_critical: number;
  wave_hp_recovery: number;
  wave_energy_recovery: number;
  dodge: number;
  physical_penetrate: number;
  magic_penetrate: number;
  life_steal: number;
  hp_recovery_rate: number;
  energy_recovery_rate: number;
  energy_reduce_rate: number;
  accuracy: number;
}
interface equipments {
  equipment_id: number;
  equipment_name: string;
  description: string;
  promotion_level: number;
  craft_flg: number;
  equipment_enhance_point: number;
  sale_price: number;
  require_level: number;
  hp: number;
  atk: number;
  magic_str: number;
  def: number;
  magic_def: number;
  physical_critical: number;
  magic_critical: number;
  wave_hp_recovery: number;
  wave_energy_recovery: number;
  dodge: number;
  physical_penetrate: number;
  magic_penetrate: number;
  life_steal: number;
  hp_recovery_rate: number;
  energy_recovery_rate: number;
  energy_reduce_rate: number;
  enable_donation: number;
  accuracy: number;
  display_item: number;
  item_type: number;
  max_equipment_enhance_level: number;
}
interface uniqueEquipment {
  equipment_id: number;
  equipment_name: string;
  description: string;
  promotion_level: number;
  craft_flg: number;
  equipment_enhance_point: number;
  sale_price: number;
  require_level: number;
  hp: number;
  atk: number;
  magic_str: number;
  def: number;
  magic_def: number;
  physical_critical: number;
  magic_critical: number;
  wave_hp_recovery: number;
  wave_energy_recovery: number;
  dodge: number;
  physical_penetrate: number;
  magic_penetrate: number;
  life_steal: number;
  hp_recovery_rate: number;
  energy_recovery_rate: number;
  energy_reduce_rate: number;
  enable_donation: number;
  accuracy: number;
  item_id_1: number;
  consume_num_1: number;
  item_id_2: number;
  consume_num_2: number;
  item_id_3: number;
  consume_num_3: number;
  item_id_4: number;
  consume_num_4: number;
  item_id_5: number;
  consume_num_5: number;
  item_id_6: number;
  consume_num_6: number;
  item_id_7: number;
  consume_num_7: number;
  item_id_8: number;
  consume_num_8: number;
  item_id_9: number;
  consume_num_9: number;
  item_id_10: number;
  consume_num_10: number;
}
interface uniqueEquipmentEnhance {
  equipment_id: number;
  equipment_name: string;
  description: string;
  promotion_level: number;
  hp: number;
  atk: number;
  magic_str: number;
  def: number;
  magic_def: number;
  physical_critical: number;
  magic_critical: number;
  wave_hp_recovery: number;
  wave_energy_recovery: number;
  dodge: number;
  physical_penetrate: number;
  magic_penetrate: number;
  life_steal: number;
  hp_recovery_rate: number;
  energy_recovery_rate: number;
  energy_reduce_rate: number;
  accuracy: number;
}
type unitSkillDataKey = keyof unitSkillData;
interface unitSkillData {
  unit_id: number;
  union_burst: number;
  main_skill_1: number;
  main_skill_2: number;
  main_skill_3: number;
  main_skill_4: number;
  main_skill_5: number;
  main_skill_6: number;
  main_skill_7: number;
  main_skill_8: number;
  main_skill_9: number;
  main_skill_10: number;
  ex_skill_1: number;
  ex_skill_evolution_1: number;
  ex_skill_2: number;
  ex_skill_evolution_2: number;
  ex_skill_3: number;
  ex_skill_evolution_3: number;
  ex_skill_4: number;
  ex_skill_evolution_4: number;
  ex_skill_5: number;
  ex_skill_evolution_5: number;
  sp_skill_1: number;
  sp_skill_2: number;
  sp_skill_3: number;
  sp_skill_4: number;
  sp_skill_5: number;
  union_burst_evolution: number;
  main_skill_evolution_1: number;
  main_skill_evolution_2: number;
  sp_skill_evolution_1: number;
  sp_skill_evolution_2: number;
}
type skillDataKey = keyof skillData;
interface skillData {
  skill_id: number;
  name: string;
  skill_type: number;
  skill_area_width: number;
  skill_cast_time: number;
  action_1: number;
  action_2: number;
  action_3: number;
  action_4: number;
  action_5: number;
  action_6: number;
  action_7: number;
  depend_action_1: number;
  depend_action_2: number;
  depend_action_3: number;
  depend_action_4: number;
  depend_action_5: number;
  depend_action_6: number;
  depend_action_7: number;
  description: string;
  icon_type: number;
  actionDataArr?: skillAction[];
}
interface skillAction {
  action_id: number;
  class_id: number;
  action_type: number;
  action_detail_1: number;
  action_detail_2: number;
  action_detail_3: number;
  action_value_1: number;
  action_value_2: number;
  action_value_3: number;
  action_value_4: number;
  action_value_5: number;
  action_value_6: number;
  action_value_7: number;
  target_assignment: number;
  target_area: number;
  target_range: number;
  target_type: number;
  target_number: number;
  target_count: number;
  description: string;
  level_up_disp: string;
}
type unitAttackPatternKey = keyof unitAttackPattern;
interface unitAttackPattern {
  pattern_id: number;
  unit_id: number;
  loop_start: number;
  loop_end: number;
  atk_pattern_1: number;
  atk_pattern_2: number;
  atk_pattern_3: number;
  atk_pattern_4: number;
  atk_pattern_5: number;
  atk_pattern_6: number;
  atk_pattern_7: number;
  atk_pattern_8: number;
  atk_pattern_9: number;
  atk_pattern_10: number;
  atk_pattern_11: number;
  atk_pattern_12: number;
  atk_pattern_13: number;
  atk_pattern_14: number;
  atk_pattern_15: number;
  atk_pattern_16: number;
  atk_pattern_17: number;
  atk_pattern_18: number;
  atk_pattern_19: number;
  atk_pattern_20: number;
}
