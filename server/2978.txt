公式：

角色剧情属性        + 四舍五入(2 * 所有装备属性     + 角色Rank汇总数据       + 角色星级数据 + 角色星级成长数据 * 等级)          + 向上取整(专武数据                + 专武升级数据 * 专武等级)
chara_story_status + Math.round(2 * equipment_data  + unit_promotion_status + unitRarity  + unitRarity.*_growth * level) + Math.ceil(unique_equipment_data + unique_equipment_enhance_rate * level)

switch(status_type_)
case "1":
  C.hp += Number(I["status_rate_" + i]);
  break;
case "2":
  C.atk += Number(I["status_rate_" + i]);
  break;
case "3":
  C.def += Number(I["status_rate_" + i]);
  break;
case "4":
  C.magic_str += Number(I["status_rate_" + i]);
  break;
case "5":
  C.magic_def += Number(I["status_rate_" + i]);
  break;
case "6":
  C.physical_critical += Number(I["status_rate_" + i]);
  break;
case "7":
  C.magic_critical += Number(I["status_rate_" + i]);
  break;
case "8":
  C.dodge += Number(I["status_rate_" + i]);
  break;
case "9":
  C.life_steal += Number(I["status_rate_" + i]);
  break;
case "10":
  C.wave_hp_recovery += Number(I["status_rate_" + i]);
  break;
case "11":
  C.wave_energy_recovery += Number(I["status_rate_" + i]);
  break;
case "15":
  C.hp_recovery_rate += Number(I["status_rate_" + i]);
  break;
case "17":
  C.accuracy += Number(I["status_rate_" + i]);